<?xml version="1.0" encoding="UTF-8"?>
<project name="Docum" default="build">
	<property file="local.properties"/>

	<path id="DocumClasspath">
		<fileset dir="${LibDir}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<path id="ToolsClasspath">
		<fileset dir="${LibDir}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${ToolsDir}">
			<include name="**/*.jar" />
		</fileset>
		<pathelement location="${BuildDir}"/>
	</path>
	
	<target name="makeDirs">
		<echo message="Building Docum ..."/>
		<mkdir dir="${DistDir}"/>
		<mkdir dir="${BuildDir}"/>
	</target>

	<target name="clean">
		<echo message="Cleaning up..."/>
		<delete dir="${DistDir}"/>
		<delete dir="${DeployDir}/docum"/>
		<delete dir="${TomcatDir}/work/Catalina/localhost"/>
	</target>

	<target name="compile" depends="makeDirs">
		<javac debug="true"
               destdir="${BuildDir}"
               classpathref="DocumClasspath"
			   srcdir="${SrcDir}"
               excludes="**/Test*.java" />
		<copy todir="${BuildDir}/META-INF">
			<fileset dir="${SrcDir}/META-INF" />
		</copy>
	</target>

	<target name="validateCopy">
		<condition property="copyAllowed">
			<available file="${TomcatDir}" type="dir"/>
		</condition>
	</target>
	
	<target name="echoValidationErr" unless="copyAllowed">
		<fail message="ERROR: ${TomcatDir} does not exists."/>
	</target>
	
	<target name="copyToDeployDir" depends="validateCopy, echoValidationErr" if="copyAllowed">
		<copy file="${DistDir}/${WarFile}"
            tofile="${DeployDir}/${WarFile}" overwrite="true">
		</copy>		
	</target>

	<target name="build" depends="clean, createWar, copyToDeployDir"/>

	<target name="createWar" depends="compile">
		<war warfile="${DistDir}/${WarFile}" webxml="${WebContentDir}/WEB-INF/web.xml">
            <fileset dir="${WebContentDir}"/>
            <lib dir="${LibDir}" excludes="**/src/**"/>
            <classes dir="${BuildDir}" excludes="**/test/**"/>
        </war>
	</target>

	<taskdef name="hibernatetool" classname="org.hibernate.tool.ant.HibernateToolTask" classpathref="ToolsClasspath"/>
	<target name="db-drop" depends="compile">
		<hibernatetool destdir="">
			<jpaconfiguration persistenceunit="docum" propertyfile="local.properties" />
			<hbm2ddl drop="true" create="false" export="true" update="false"/>
			<classpath>
				<path location="${BuildDir}"/>
			</classpath>
		</hibernatetool>
	</target>
	<target name="db-create-empty" depends="compile">
		<hibernatetool destdir="">
			<jpaconfiguration persistenceunit="docum" propertyfile="local.properties" />
			<hbm2ddl drop="true" create="true" export="true" update="false"/>
		</hibernatetool>
	</target>
	<target name="db-create" depends="db-create-empty">
		<junit>
			<classpath refid="ToolsClasspath" />
			<test name="test.dao.TestDataPreparator"/>
		</junit>
	</target>
	<target name="db-update" depends="compile">
		<hibernatetool destdir="">
			<jpaconfiguration persistenceunit="docum" propertyfile="local.properties" />
			<hbm2ddl drop="false" create="false" export="true" update="true"/>
		</hibernatetool>
	</target>

	<target name="db-doc" depends="compile" description="Generate a html description of the mappings">
		<hibernatetool destdir="hibernate-html">
			<jpaconfiguration persistenceunit="docum" propertyfile="local.properties" />
			<hbm2doc/>
		</hibernatetool>
	</target>
</project>
